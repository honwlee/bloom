/* =============================================================================
  MEMORY GAME (mg)
============================================================================= */


/**
 * Game container
 *
 * This is the overall container for the game. Different things get addead and
 * removed from this container depending on the game state.
 */

// font families
$font-family--primary: 'Roboto Slab',
serif;

// font sizes
$font-size--xxsmall: 11px;
$font-size--xsmall: 12px;
$font-size--small: 14px;
$font-size--medium: 18px;
$font-size--large: 24px;
$font-size--xlarge: 30px;
$font-size--xxlarge: 36px;

// line heights
$line-height--small: 1.2;
$line-height--medium: 1.5;
$line-height--large: 1.8;

// colours
$color--dkgrey: rgb(40, 42, 47);
$color--grey: rgb(120, 122, 128);
$color--ltgrey: rgb(220, 222, 225);
$color--xltgrey: rgb(248, 250, 252);

$color--blue: rgb(40, 170, 220);
$color--dkblue: darken($color--blue, 20%);
$color--ltblue: lighten($color--blue, 20%);

$color--red: rgba(48, 188, 38, 1);
$color--dkred: darken($color--red, 20%);
$color--ltred: lighten($color--red, 20%);

$color--green: rgb(145, 251, 173);

$color--yellow: rgb(255, 255, 220);

// game config variables
$tile--transition-time: 0.2s;

// levels -> used in _modules
//
// mapped out like:
// LEVEL NUM : GRID LENGTH
//
// level 1 - 4 x 2 grid
// level 2 - 6 x 3 grid
// level 3 - 8 x 4 grid
//
// Add more levels if you want, but make sure you adjust the following:
//
// 1. Make sure grid aspect ratio is 2:1
// 2. Make sure to allow more level selection on the start screen HTML
// 3. Make sure that you add images for new levels
$levels: ( 1: 8,
2: 18,
3: 32);

$loops: 0;
@function approximateSq($num, $approx) {
    $root: (( $num / $approx) + $approx) / 2;
    @return $root;
}

@function sqrt($num) {
    $root: 0;
    $testRoot: 0;
    $upperBounds: round($num / 2) + 1; //never need over half the main number. Add one just to be sure!
    $loops: $upperBounds;
    @for $test from 2 through $upperBounds {
        $sq: $test * $test;
        @if $sq <=$num {
            $testRoot: $test;
        }
    }

    $root: (approximateSq($num, $testRoot));

    @return $root;
}


.mg {
    margin: 15px;
    /**
 * Game meta
 *
 * The game meta is the section that displays the level and moves. It's appended
 * to the game container at the start, and shows the level the user selected
 * and the number of moves the user has played.
 */
    .mg__meta {
        margin-bottom: 10px;
        color: $color--blue;
    }

    .mg__meta--item {
        display: inline-block;
    }

    .mg__meta--left {
        float: left;
    }

    .mg__meta--right {
        float: right;
    }

    .mg__meta--level {
        margin-right: 20px;
    }

    .mg__meta--moves {}
    /**
 * Game start screen
 *
 * The game start screen shows the "welcome" message and also a list for the
 * user to choose a level. It's appended to the game container at the start,
 * and once the user selects a level, it is removed from the container
 */
    .mg__start-screen {
        text-align: center;
        padding: 80px 20px;
    }

    .mg__start-screen--heading {
        margin-bottom: 10px;
        color: $color--dkgrey;
        font-size: $font-size--xlarge;
    }

    .mg__start-screen--sub-heading {
        font-size: $font-size--large;
        margin-bottom: 10px;
        color: $color--blue;
        &::before,
        &::after {
            margin: 0 5px;
            content: "-";
        }
    }

    .mg__start-screen--text {
        margin-bottom: 20px;
    }

    .mg__start-screen--level-select {
        list-style: none;
        margin: 0;
        padding: 0;
        span {
            color: $color--red;
            font-size: 18px;
            cursor: pointer;
            &:hover {
                color: #1a6715;
            }
        }
    }
    /**
 * Game wrapper
 *
 * The game wrapper is where the actual game resides. Inside here, all the
 * memory tiles get arranged and ready for game play.
 */
    .mg__wrapper {
        margin: 0 auto;
        width: 100%;
    }

    .mg__contents {
        position: relative;
        margin-left: -5px;
        margin-right: -5px;
    }
    /**
 * Game tiles
 *
 * The game tiles are the tiles that are laid down on the memory game board.
 * These tiles are the ones that the user clicks on to flip and reveal some
 * images. The level the user selects determines the position and size of
 * the tiles.
 */
    .mg__tile {
        padding: 5px;
    }
    /**
 * The tile inside
 *
 * The "tile inner" is the part of the tile that serves as the card. Inside
 * this part, there's an outside and inside part. The outside of the card
 * is the part that has the logo or the pattern or whatever...basically the
 * part that doesn't show the content to be matched. The inside part has the
 * actual images / info to be matched.
 */
    .mg__tile--inner {
        position: relative;
        width: 100%;
        height: 100%;
        cursor: pointer;
        &:before {
            content: "\2714";
            display: block;
            position: absolute;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            width: 40px;
            height: 40px;
            line-height: 40px;
            background: #00c09e;
            border-radius: 50px;
            color: #fff;
            text-align: center;
            font-size: 16px;
            z-index: 10;
            opacity: 0;
            transition: 0.3s linear;
            -o-transition: 0.3s linear;
            -ms-transition: 0.3s linear;
            -moz-transition: 0.3s linear;
            -webkit-transition: 0.3s linear;
            -o-user-select: none;
            -moz-user-select: none;
            -webkit-user-select: none;
            cursor: pointer;
        }
        &.flipped {
            &:before {
                opacity: .3;
            }
            img {
                box-shadow: 0 0 0 4px #00c09e;
                animation: selected 0.3s cubic-bezier(0.250, 0.100, 0.250, 1.000);
                -o-animation: selected 0.3s cubic-bezier(0.250, 0.100, 0.250, 1.000);
                -ms-animation: selected 0.3s cubic-bezier(0.250, 0.100, 0.250, 1.000);
                -moz-animation: selected 0.3s cubic-bezier(0.250, 0.100, 0.250, 1.000);
                -webkit-animation: selected 0.3s cubic-bezier(0.250, 0.100, 0.250, 1.000);
            }
        }
        img {
            width: 100%;
            height: auto;
            display: inline-block;
        }
    }

    .mg__tile--outside,
    .mg__tile--inside {
        display: block;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
    }

    .mg__tile--outside {
        background-color: $color--ltgrey;
        box-shadow: 0 0 0 1px $color--grey;
        transition: transform 1s, background 0.3s;
    }

    .mg__tile--inside {
        height: 0;
        background-color: $color--xltgrey;
        box-shadow: 0 0 0 1px $color--grey;
        transform: rotateY(-180deg);
        img {
            height: 0;
        }
    }
    /* some transforms for flipped cards */
    .mg__tile--inner.flipped .mg__tile--outside {
        height: 0;
        transform: rotateY(-180deg);
        transition: transform 1s, background 0.3s;
    }

    .mg__tile--inner.flipped .mg__tile--inside {
        height: 100%;
        img {
            height: auto;
        }
        transform: rotateY(0);
        transition: transform 1s, background 0.3s;
    }
    /* some transitions for correct guesses - only needs to happen on card inside */
    .mg__tile--inner.flipped.correct .mg__tile--inside {
        background-color: $color--yellow;
    }
    /**
 * Game message
 *
 * The game message area is an area to display game messages. It's used in the
 * default set up where no callback is set in the JS. If a callback is set up,
 * then this message area likely won't display. Unless you decide to display it
 * in your own custom callback though!
 */
    .mg__onend {
        padding: 80px 20px;
        text-align: center;
    }

    .mg__onend--heading {
        margin-bottom: 10px;
        color: $color--blue;
        font-size: $font-size--xlarge;
    }

    .mg__onend--message {
        margin-bottom: 10px;
    }
    /**
 * Game buttons
 *
 * A simple helper class for game buttons. Edit at your will.
 */
    .mg__button {
        margin: 0;
        display: inline-block;
        padding: 5px;
        color: #fff;
        font-family: $font-family--primary;
        font-size: $font-size--small;
        appearance: none;
        background: $color--red;
        border: none;
        border-radius: 3px;
        box-shadow: none;
        cursor: pointer;
    }
}
